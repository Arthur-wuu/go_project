// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type RequestGetPosns struct {
	Tid         uint64   `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Assets      []string `protobuf:"bytes,2,rep,name=assets" json:"assets,omitempty"`
	IncludeZero bool     `protobuf:"varint,3,opt,name=include_zero,json=includeZero" json:"include_zero,omitempty"`
}

func (m *RequestGetPosns) Reset()                    { *m = RequestGetPosns{} }
func (m *RequestGetPosns) String() string            { return proto.CompactTextString(m) }
func (*RequestGetPosns) ProtoMessage()               {}
func (*RequestGetPosns) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *RequestGetPosns) GetTid() uint64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *RequestGetPosns) GetAssets() []string {
	if m != nil {
		return m.Assets
	}
	return nil
}

func (m *RequestGetPosns) GetIncludeZero() bool {
	if m != nil {
		return m.IncludeZero
	}
	return false
}

type Position struct {
	Asset     string `protobuf:"bytes,1,opt,name=asset" json:"asset,omitempty"`
	Available string `protobuf:"bytes,2,opt,name=available" json:"available,omitempty"`
	Frozen    string `protobuf:"bytes,3,opt,name=frozen" json:"frozen,omitempty"`
}

func (m *Position) Reset()                    { *m = Position{} }
func (m *Position) String() string            { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()               {}
func (*Position) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *Position) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *Position) GetAvailable() string {
	if m != nil {
		return m.Available
	}
	return ""
}

func (m *Position) GetFrozen() string {
	if m != nil {
		return m.Frozen
	}
	return ""
}

type ResponseGetPosns struct {
	Tid   uint64      `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	Posns []*Position `protobuf:"bytes,2,rep,name=posns" json:"posns,omitempty"`
}

func (m *ResponseGetPosns) Reset()                    { *m = ResponseGetPosns{} }
func (m *ResponseGetPosns) String() string            { return proto.CompactTextString(m) }
func (*ResponseGetPosns) ProtoMessage()               {}
func (*ResponseGetPosns) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *ResponseGetPosns) GetTid() uint64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *ResponseGetPosns) GetPosns() []*Position {
	if m != nil {
		return m.Posns
	}
	return nil
}

type RequestDeposit struct {
	Tid       uint64 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	PaymentId uint64 `protobuf:"varint,2,opt,name=payment_id,json=paymentId" json:"payment_id,omitempty"`
	Asset     string `protobuf:"bytes,3,opt,name=asset" json:"asset,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount" json:"amount,omitempty"`
	Type      string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
}

func (m *RequestDeposit) Reset()                    { *m = RequestDeposit{} }
func (m *RequestDeposit) String() string            { return proto.CompactTextString(m) }
func (*RequestDeposit) ProtoMessage()               {}
func (*RequestDeposit) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *RequestDeposit) GetTid() uint64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *RequestDeposit) GetPaymentId() uint64 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *RequestDeposit) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *RequestDeposit) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *RequestDeposit) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ResponseDeposit struct {
	Tid       uint64 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	PaymentId uint64 `protobuf:"varint,2,opt,name=payment_id,json=paymentId" json:"payment_id,omitempty"`
	Asset     string `protobuf:"bytes,3,opt,name=asset" json:"asset,omitempty"`
	Available string `protobuf:"bytes,4,opt,name=available" json:"available,omitempty"`
	Frozen    string `protobuf:"bytes,5,opt,name=frozen" json:"frozen,omitempty"`
}

func (m *ResponseDeposit) Reset()                    { *m = ResponseDeposit{} }
func (m *ResponseDeposit) String() string            { return proto.CompactTextString(m) }
func (*ResponseDeposit) ProtoMessage()               {}
func (*ResponseDeposit) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *ResponseDeposit) GetTid() uint64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *ResponseDeposit) GetPaymentId() uint64 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *ResponseDeposit) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *ResponseDeposit) GetAvailable() string {
	if m != nil {
		return m.Available
	}
	return ""
}

func (m *ResponseDeposit) GetFrozen() string {
	if m != nil {
		return m.Frozen
	}
	return ""
}

type RequestWithdrawal struct {
	Tid       uint64 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	PaymentId uint64 `protobuf:"varint,2,opt,name=payment_id,json=paymentId" json:"payment_id,omitempty"`
	Asset     string `protobuf:"bytes,3,opt,name=asset" json:"asset,omitempty"`
	Amount    string `protobuf:"bytes,4,opt,name=amount" json:"amount,omitempty"`
	Type      string `protobuf:"bytes,5,opt,name=type" json:"type,omitempty"`
}

func (m *RequestWithdrawal) Reset()                    { *m = RequestWithdrawal{} }
func (m *RequestWithdrawal) String() string            { return proto.CompactTextString(m) }
func (*RequestWithdrawal) ProtoMessage()               {}
func (*RequestWithdrawal) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{5} }

func (m *RequestWithdrawal) GetTid() uint64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *RequestWithdrawal) GetPaymentId() uint64 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *RequestWithdrawal) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *RequestWithdrawal) GetAmount() string {
	if m != nil {
		return m.Amount
	}
	return ""
}

func (m *RequestWithdrawal) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type ResponseWithdrawal struct {
	Tid       uint64 `protobuf:"varint,1,opt,name=tid" json:"tid,omitempty"`
	PaymentId uint64 `protobuf:"varint,2,opt,name=payment_id,json=paymentId" json:"payment_id,omitempty"`
	Asset     string `protobuf:"bytes,3,opt,name=asset" json:"asset,omitempty"`
	Available string `protobuf:"bytes,4,opt,name=available" json:"available,omitempty"`
	Frozen    string `protobuf:"bytes,5,opt,name=frozen" json:"frozen,omitempty"`
}

func (m *ResponseWithdrawal) Reset()                    { *m = ResponseWithdrawal{} }
func (m *ResponseWithdrawal) String() string            { return proto.CompactTextString(m) }
func (*ResponseWithdrawal) ProtoMessage()               {}
func (*ResponseWithdrawal) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{6} }

func (m *ResponseWithdrawal) GetTid() uint64 {
	if m != nil {
		return m.Tid
	}
	return 0
}

func (m *ResponseWithdrawal) GetPaymentId() uint64 {
	if m != nil {
		return m.PaymentId
	}
	return 0
}

func (m *ResponseWithdrawal) GetAsset() string {
	if m != nil {
		return m.Asset
	}
	return ""
}

func (m *ResponseWithdrawal) GetAvailable() string {
	if m != nil {
		return m.Available
	}
	return ""
}

func (m *ResponseWithdrawal) GetFrozen() string {
	if m != nil {
		return m.Frozen
	}
	return ""
}

func init() {
	proto.RegisterType((*RequestGetPosns)(nil), "rpc.RequestGetPosns")
	proto.RegisterType((*Position)(nil), "rpc.Position")
	proto.RegisterType((*ResponseGetPosns)(nil), "rpc.ResponseGetPosns")
	proto.RegisterType((*RequestDeposit)(nil), "rpc.RequestDeposit")
	proto.RegisterType((*ResponseDeposit)(nil), "rpc.ResponseDeposit")
	proto.RegisterType((*RequestWithdrawal)(nil), "rpc.RequestWithdrawal")
	proto.RegisterType((*ResponseWithdrawal)(nil), "rpc.ResponseWithdrawal")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Accounts service

type AccountsClient interface {
	// List Positions.
	ListPositions(ctx context.Context, in *RequestGetPosns, opts ...grpc.CallOption) (*ResponseGetPosns, error)
	// Deposits.
	Deposits(ctx context.Context, in *RequestDeposit, opts ...grpc.CallOption) (*ResponseDeposit, error)
	// Withdrawals.
	Withdrawals(ctx context.Context, in *RequestWithdrawal, opts ...grpc.CallOption) (*ResponseWithdrawal, error)
}

type accountsClient struct {
	cc *grpc.ClientConn
}

func NewAccountsClient(cc *grpc.ClientConn) AccountsClient {
	return &accountsClient{cc}
}

func (c *accountsClient) ListPositions(ctx context.Context, in *RequestGetPosns, opts ...grpc.CallOption) (*ResponseGetPosns, error) {
	out := new(ResponseGetPosns)
	err := grpc.Invoke(ctx, "/rpc.Accounts/ListPositions", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) Deposits(ctx context.Context, in *RequestDeposit, opts ...grpc.CallOption) (*ResponseDeposit, error) {
	out := new(ResponseDeposit)
	err := grpc.Invoke(ctx, "/rpc.Accounts/Deposits", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountsClient) Withdrawals(ctx context.Context, in *RequestWithdrawal, opts ...grpc.CallOption) (*ResponseWithdrawal, error) {
	out := new(ResponseWithdrawal)
	err := grpc.Invoke(ctx, "/rpc.Accounts/Withdrawals", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Accounts service

type AccountsServer interface {
	// List Positions.
	ListPositions(context.Context, *RequestGetPosns) (*ResponseGetPosns, error)
	// Deposits.
	Deposits(context.Context, *RequestDeposit) (*ResponseDeposit, error)
	// Withdrawals.
	Withdrawals(context.Context, *RequestWithdrawal) (*ResponseWithdrawal, error)
}

func RegisterAccountsServer(s *grpc.Server, srv AccountsServer) {
	s.RegisterService(&_Accounts_serviceDesc, srv)
}

func _Accounts_ListPositions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestGetPosns)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).ListPositions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Accounts/ListPositions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).ListPositions(ctx, req.(*RequestGetPosns))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_Deposits_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDeposit)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).Deposits(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Accounts/Deposits",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).Deposits(ctx, req.(*RequestDeposit))
	}
	return interceptor(ctx, in, info, handler)
}

func _Accounts_Withdrawals_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestWithdrawal)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountsServer).Withdrawals(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Accounts/Withdrawals",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountsServer).Withdrawals(ctx, req.(*RequestWithdrawal))
	}
	return interceptor(ctx, in, info, handler)
}

var _Accounts_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Accounts",
	HandlerType: (*AccountsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListPositions",
			Handler:    _Accounts_ListPositions_Handler,
		},
		{
			MethodName: "Deposits",
			Handler:    _Accounts_Deposits_Handler,
		},
		{
			MethodName: "Withdrawals",
			Handler:    _Accounts_Withdrawals_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account.proto",
}

func init() { proto.RegisterFile("account.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x94, 0xc1, 0x6b, 0xdb, 0x30,
	0x14, 0xc6, 0xa3, 0xd8, 0x0e, 0xf6, 0xcb, 0xb2, 0x65, 0x5a, 0x96, 0x99, 0xb0, 0x41, 0xa6, 0x5d,
	0x72, 0xca, 0x21, 0x3b, 0xec, 0x36, 0x36, 0x18, 0x8c, 0xc0, 0x0e, 0x41, 0x87, 0x0d, 0x76, 0x58,
	0x50, 0x6c, 0x8d, 0x0a, 0x1c, 0x4b, 0xb5, 0x94, 0x96, 0xe4, 0x5a, 0xe8, 0xb1, 0xd0, 0x3f, 0xaa,
	0xff, 0x57, 0xb1, 0xac, 0xe0, 0xb8, 0xb4, 0x3d, 0x94, 0x40, 0x6f, 0x7a, 0xdf, 0xc7, 0x93, 0x3f,
	0xfd, 0xf4, 0x64, 0xe8, 0xb1, 0x24, 0x91, 0x9b, 0xdc, 0x4c, 0x55, 0x21, 0x8d, 0xc4, 0x5e, 0xa1,
	0x12, 0xf2, 0x0f, 0x5e, 0x51, 0x7e, 0xba, 0xe1, 0xda, 0xfc, 0xe4, 0x66, 0x21, 0x75, 0xae, 0x71,
	0x1f, 0x3c, 0x23, 0xd2, 0x18, 0x8d, 0xd1, 0xc4, 0xa7, 0xe5, 0x12, 0x0f, 0xa1, 0xc3, 0xb4, 0xe6,
	0x46, 0xc7, 0xed, 0xb1, 0x37, 0x89, 0xa8, 0xab, 0xf0, 0x47, 0x78, 0x21, 0xf2, 0x24, 0xdb, 0xa4,
	0x7c, 0xb9, 0xe3, 0x85, 0x8c, 0xbd, 0x31, 0x9a, 0x84, 0xb4, 0xeb, 0xb4, 0xbf, 0xbc, 0x90, 0xe4,
	0x37, 0x84, 0x0b, 0xa9, 0x85, 0x11, 0x32, 0xc7, 0x03, 0x08, 0x6c, 0xa3, 0xdd, 0x3a, 0xa2, 0x55,
	0x81, 0xdf, 0x43, 0xc4, 0xce, 0x98, 0xc8, 0xd8, 0x2a, 0xe3, 0x71, 0xdb, 0x3a, 0xb5, 0x50, 0x7e,
	0xfa, 0x7f, 0x21, 0x77, 0x3c, 0xb7, 0x9b, 0x47, 0xd4, 0x55, 0x64, 0x0e, 0x7d, 0xca, 0xb5, 0x92,
	0xb9, 0xe6, 0x8f, 0x04, 0xff, 0x04, 0x81, 0x2a, 0x2d, 0x9b, 0xbb, 0x3b, 0xeb, 0x4d, 0x0b, 0x95,
	0x4c, 0xf7, 0x79, 0x68, 0xe5, 0x91, 0x0b, 0x04, 0x2f, 0x1d, 0x83, 0x1f, 0x5c, 0x95, 0xe6, 0x3d,
	0x3b, 0x7d, 0x00, 0x50, 0x6c, 0xbb, 0xe6, 0xb9, 0x59, 0x8a, 0xd4, 0xc6, 0xf4, 0x69, 0xe4, 0x94,
	0x79, 0x5a, 0x1f, 0xcd, 0x3b, 0x3c, 0x5a, 0xc9, 0x6d, 0x5d, 0x12, 0x8f, 0xfd, 0x2a, 0x7c, 0x55,
	0x61, 0x0c, 0xbe, 0xd9, 0x2a, 0x1e, 0x07, 0x56, 0xb5, 0x6b, 0x72, 0x85, 0xca, 0x9b, 0xa8, 0x4e,
	0x74, 0xe4, 0x18, 0x0d, 0xc2, 0xfe, 0xc3, 0x84, 0x83, 0x06, 0xe1, 0x4b, 0x04, 0xaf, 0x1d, 0x96,
	0x3f, 0xc2, 0x9c, 0xa4, 0x05, 0x3b, 0x67, 0xd9, 0x73, 0x90, 0xb9, 0x46, 0x80, 0xf7, 0x64, 0x8e,
	0x9f, 0xe4, 0x49, 0x70, 0x66, 0x37, 0x08, 0xc2, 0xef, 0xd5, 0x6b, 0xd2, 0xf8, 0x2b, 0xf4, 0x7e,
	0x09, 0x6d, 0xf6, 0x73, 0xa5, 0xf1, 0xc0, 0xce, 0xd9, 0x9d, 0x77, 0x35, 0x7a, 0xeb, 0xd4, 0xe6,
	0xd4, 0x92, 0x16, 0xfe, 0x02, 0xa1, 0xbb, 0x71, 0x8d, 0xdf, 0x1c, 0xb6, 0x3a, 0x75, 0x34, 0x68,
	0x74, 0x3a, 0x95, 0xb4, 0xf0, 0x37, 0xe8, 0xd6, 0x40, 0x34, 0x1e, 0x1e, 0xf6, 0xd6, 0xc6, 0xe8,
	0x5d, 0xa3, 0xbd, 0x36, 0x48, 0x6b, 0xd5, 0xb1, 0xbf, 0x82, 0xcf, 0xb7, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x22, 0xfd, 0xfd, 0xdb, 0x1b, 0x04, 0x00, 0x00,
}
